type Course {
  _id: ID!
  title: String!
  description: String!
  teacher: String
  topic: String
}

type Student {
  _id: ID!
  name: String!
  email: String!
}

type Query {
  """
  Return all courses
  """
  getCourses: [Course]
  """
  Return a courses
  """
  getCourse(id: ID!): Course
  """
  Return all students
  """
  getStudents: [Student]
  """
  Return a student
  """
  getStudent(id: ID!): Student
}

input CourseInput {
  title: String!
  description: String!
  teacher: String
  topic: String
}

input CourseEditInput {
  id: ID!
  title: String
  description: String
  teacher: String
  topic: String
}

input StudentInput {
  name: String!
  email: String!
}

input StudentEditInput {
  id: ID!
  name: String
  email: String
}

type Mutation {
  """
  Create a course
  """
  createCourse(input: CourseInput!): Course
  """
  Edit a course
  """
  editCourse(input: CourseEditInput!): Course
  """
  Delete a course
  """
  deleteCourse(id: ID!): String
  """
  Create a student
  """
  createStudent(input: StudentInput!): Student
  """
  Edit a student
  """
  editStudent(input: StudentEditInput!): Student
  """
  Delete a student
  """
  deleteStudent(id: ID!): String
}
